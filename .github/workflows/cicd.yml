name: CI/CD

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      
      # 캐싱 추가
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ubuntu-latest-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ubuntu-latest-pip-

      - name: Install dependencies
        run: pip install -r backend/requirements.txt

      - name: Set environment variable 
        run: | 
          echo "SQLALCHEMY_ASYNC_DATABASE_URL=${{ secrets.SQLALCHEMY_ASYNC_DATABASE_URL }}" >> $GITHUB_ENV
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV

      - name: Run tests
        run: |
          cd backend
          pytest

  # 이미지 기반 배포
  deploy: 
    needs: test
    if: success()
    runs-on: ubuntu-22.04
    
    steps: 
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Docker login
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        
      - name: Docker Build & push & cache
        uses: docker/build-push-action@v3
        with:
          context: .
          file: backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/lessonhub_image:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/lessonhub_image:latest
          cache-to: type=inline

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ORACLE_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H 140.245.75.185 >> ~/.ssh/known_hosts

      - name: Docker compose run on Oracle
        run: |
          ssh ubuntu@140.245.75.185 << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/lessonhub_image:latest
            cd cheese
            docker-compose up -d
          EOF


  # 코드 기방 배포
  # deploy:
  #   needs: test
  #   if: success()
  #   runs-on: ubuntu-22.04

  #   steps:
  #     - name: Setup SSH
  #       run: |
  #         mkdir -p ~/.ssh
  #         echo "${{ secrets.ORACLE_SSH_KEY }}" > ~/.ssh/id_ed25519
  #         chmod 600 ~/.ssh/id_ed25519
  #         ssh-keyscan -H 140.245.75.185 >> ~/.ssh/known_hosts
      
  #     - name: Docker-compose Deploy
  #       run: |
  #         ssh ubuntu@140.245.75.185 << 'EOF'
  #           cd cheese
  #           git pull origin main
  #           docker-compose up --build -d
  #         EOF